import com.github.tatercertified.MCBuildConfig
import com.github.tatercertified.MultiMCGradle
import com.github.tatercertified.utils.DependencyBuilder
import com.github.tatercertified.utils.MCGradleBuilder
import java.nio.file.Paths

buildscript {
    repositories {
        flatDir {
            dirs 'build/libs'
        }
    }
    dependencies {
        classpath name: 'MultiMCGradle-1.0.0-all'
    }
}

plugins {
    id 'java'
    id 'java-gradle-plugin'
    id("com.gradleup.shadow") version "9.0.0-rc1"
}

apply plugin: MultiMCGradle

group = 'com.github.tatercertified'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    shadow(implementation('com.vdurmont:semver4j:3.1.0'))
}

multimc {
    // If future Minecraft versions should be supported (default: false)
    futureCompatible = true
    // Path where jars should be placed
    outputDir = Paths.get("output")
    // The name of a variable in gradle.properties
    modConfigFileRelativePath = "modConfig"
    // The loader name and where the subproject directory is located
    loaderSpecificPaths = ["fabric": Paths.get("multimctest")]
    // Specifies how to handle gradle properties between versions
    gradleConfig = new MCBuildConfig((MCGradleBuilder builder) -> {
        builder.mcVer("1.21.5", (DependencyBuilder depBuilder) -> {
            depBuilder.dep("minecraft_version", "1.21.5")
            depBuilder.dep("yarn_mappings", "1.21.5+build.1")
            depBuilder.dep("fabric_version", "0.128.1+1.21.5")
        })
        builder.mcVer("1.21.6", (DependencyBuilder depBuilder) -> {
            depBuilder.dep("minecraft_version", "1.21.6")
            depBuilder.dep("yarn_mappings", "1.21.6+build.1")
            depBuilder.dep("fabric_version", "0.128.2+1.21.6")
        })
        builder.mcVer("1.21.7", (DependencyBuilder depBuilder) -> {
            depBuilder.dep("minecraft_version", "1.21.7")
            depBuilder.dep("yarn_mappings", "1.21.7+build.6")
            depBuilder.dep("fabric_version", "0.129.0+1.21.7")
        })
    })
}
